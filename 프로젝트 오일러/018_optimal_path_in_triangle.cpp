// Problem #018: 삼각형을 따라 내려가면서 합이 최대가 되는 경로 찾기

#include <iostream>
#include <ctime>

void merge_nth_line(unsigned nums[15][15], int n, char path[15][15])
{
	if (n > 1)
	{
		for (int i = 0; i < n - 1; ++i)
		{
			int num1 = nums[n - 2][i] + nums[n - 1][i];
			int num2 = nums[n - 2][i] + nums[n - 1][i + 1];
			if (num1 > num2)
			{
				nums[n - 2][i] = num1;
				path[n - 2][i] = '|';
			}
			else
			{
				nums[n - 2][i] = num2;
				path[n - 2][i] = '\\';
			}
		}
	}
}

void convertPath(unsigned nums[15][15], char path[15][15])
{
	for (int i = 0; i < 14; ++i)
	{
		for (int j = 0; j < 14; ++j)
		{
			if (nums[i][j])
			{
				int crit;
				if (path[i][j] == '|') crit = j;
				else crit = j + 1;

				for (int k = 0; k < crit; ++k)
					nums[i + 1][k] = 0;

				for (int k = crit + 1; k < 15; ++k)
					nums[i + 1][k] = 0;
			}
		}
	}
}

void print(unsigned triangle[15][15])
{
	for (int i = 0; i < 15; ++i)
	{
		for (int j = 0; j < 15; ++j)
			std::cout << triangle[i][j] << "\t";

		std::cout << std::endl;
	}
}

void print(char path[15][15])
{
	for (int i = 0; i < 14; ++i)
	{
		for (int j = 0; j < 14; ++j)
			std::cout << path[i][j] << "\t";

		std::cout << std::endl;
	}
}

int main()
{
	clock_t start, end;
	start = clock();

	unsigned triangle[15][15] =
	{ 75,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  95, 64,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  17, 47, 82,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  18, 35, 87, 10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  20,  4, 82, 47, 65,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  19,  1, 23, 75,  3, 34,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  88,  2, 77, 73,  7, 63, 67,  0,  0,  0,  0,  0,  0,  0,  0,
	  99, 65,  4, 28,  6, 16, 70, 92,  0,  0,  0,  0,  0,  0,  0,
	  41, 41, 26, 56, 83, 40, 80, 70, 33,  0,  0,  0,  0,  0,  0,
	  41, 48, 72, 33, 47, 32, 37, 16, 94, 29,  0,  0,  0,  0,  0,
	  53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14,  0,  0,  0,  0,
	  70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57,  0,  0,  0,
	  91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48,  0,  0,
	  63, 66,  4, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31,  0,
	   4, 62, 98, 27, 23,  9, 70, 98, 73, 93, 38, 53, 60,  4, 23 };
	
	unsigned merged_triangle[15][15] =
	{ 75,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  95, 64,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  17, 47, 82,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  18, 35, 87, 10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  20,  4, 82, 47, 65,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  19,  1, 23, 75,  3, 34,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  88,  2, 77, 73,  7, 63, 67,  0,  0,  0,  0,  0,  0,  0,  0,
	  99, 65,  4, 28,  6, 16, 70, 92,  0,  0,  0,  0,  0,  0,  0,
	  41, 41, 26, 56, 83, 40, 80, 70, 33,  0,  0,  0,  0,  0,  0,
	  41, 48, 72, 33, 47, 32, 37, 16, 94, 29,  0,  0,  0,  0,  0,
	  53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14,  0,  0,  0,  0,
	  70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57,  0,  0,  0,
	  91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48,  0,  0,
	  63, 66,  4, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31,  0,
	   4, 62, 98, 27, 23,  9, 70, 98, 73, 93, 38, 53, 60,  4, 23 };

	char path[15][15] = { 0 };

	print(triangle);
	printf("\n");

	for (int i = 15; i > 1; --i)
		merge_nth_line(merged_triangle, i, path);

	print(path);
	printf("\n");

	convertPath(triangle, path);
	print(triangle);
	printf("\n");

	printf("답: %i\n", merged_triangle[0][0]);

	end = clock();
	printf("실행시간: %.3llf ms\n", (double)(end - start));
	return 0;
}